---
- name: Disable SELinux
  selinux:
    state: permissive
    policy: targeted

- name: Load br_netfilter module now
  modprobe:
    name: br_netfilter
    state: present

- name: Make br_netfilter module load on boot
  lineinfile:
    path: /etc/modules-load.d/k8s.conf
    line: br_netfilter
    create: yes

- name: Enable bridge-nf-call-iptables and IP forwarding
  copy:
    src: k8s.conf
    dest: /etc/sysctl.d/k8s.conf
  notify: Reload sysctl

- name: Disable swap for performance
  command: swapoff -a
  changed_when: no

- name: Comment-out swap entry from fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw.*)$'
    replace: '#\1'

- name: Add Kubernetes repository
  yum_repository:
    name: kubernetes
    description: Kubernetes EL7
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch
    gpgkey:
      - https://packages.cloud.google.com/yum/doc/yum-key.gpg
      - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    gpgcheck: yes
    repo_gpgcheck: yes
    exclude:
      - kubeadm
      - kubectl
      - kubelet
    state: present

- name: Install Kubernetes
  dnf:
    name:
      - kubeadm
      - kubectl
      - kubelet
    disable_excludes: kubernetes
    state: present

- name: Install k8s Python client library
  pip:
    name: kubernetes

- name: Set up incoming traffic firewall rules for worker node(s)
  firewalld:
    zone: public
    port: "{{ item }}"
    permanent: yes
    immediate: yes
    state: enabled
  with_items:
    # Kubelet API
    - '10250/tcp'
    # Flannel vxlan backend traffic
    - '8472/udp'
    # NodePort exposed ports
    - '30000-32767/tcp'
  when: not is_control_plane
  notify: Reload firewalld

- name: Set up incoming traffic firewall rules for control plane node(s)
  firewalld:
    zone: public
    port: "{{ item }}"
    permanent: yes
    immediate: yes
    state: enabled
  with_items:
    # Kubelet API
    - '10250/tcp'
    # Flannel vxlan backend traffic
    - '8472/udp'
    # API server.
    - '6443/tcp'
  when: is_control_plane
  notify: Reload firewalld

  # This is required for traffic forwarding (for Flannel) to function correctly.
- name: Enable masquerade
  firewalld:
    zone: public
    permanent: yes
    masquerade: yes
    state: enabled
  notify: Reload firewalld

- name: Enable kubelet service
  systemd:
    name: kubelet
    state: started
    enabled: yes
